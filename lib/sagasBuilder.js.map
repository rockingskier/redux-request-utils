{"version":3,"sources":["../src/sagasBuilder.js"],"names":[],"mappings":";;;;;;;;QAMgB,Y,GAAA,Y;;AANhB;;AACA;;AAEA,IAAM,iBAAiB;AACrB,eAAa;AADQ,CAAvB;AAGO,SAAS,YAAT,CAAsB,OAAtB,EAA+B,OAA/B,EAAwC,OAAxC,EAA+D;AAAA,iBAQ1D,WAR0D,EA8B1D,eA9B0D;;AAAA,MAAd,OAAc,yDAAJ,EAAI;;AAAA,2CAI/D,cAJ+D,EAK/D,OAL+D;;AAAA,MAElE,WAFkE,yBAElE,WAFkE;;;AAQpE,WAAU,WAAV;AAAA,QAAwB,OAAxB,QAAwB,OAAxB;AAAA,QAAiC,IAAjC,QAAiC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACM,gBADN;AAEM,iBAFN;AAAA;AAAA;AAAA,mBAKU,kBAAI,QAAQ,OAAR,CAAgB,OAAhB,EAAyB,IAAzB,CAAJ,CALV;;AAAA;AAAA;AAAA,mBAMiB,mBAAK,OAAL,EAAc,OAAd,EAAuB,IAAvB,CANjB;;AAAA;AAMI,gBANJ;AAAA;AAAA,mBAOU,kBAAI,QAAQ,OAAR,CAAgB,IAAhB,EAAsB,IAAtB,CAAJ,CAPV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AASI;AATJ;AAAA,mBAUU,kBAAI,QAAQ,OAAR,CAAgB,KAAhB,EAAuB,IAAvB,CAAJ,CAVV;;AAAA;AAAA,iBAWQ,WAXR;AAAA;AAAA;AAAA;;AAAA,kBAYY,KAZZ;;AAAA;AAAA,6CAgBS;AACL,wBADK;AAEL;AAFK,aAhBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBA,WAAU,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,0BAAU,OAAV,EAAmB,WAAnB,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAO;AACL,4BADK;AAEL;AAFK,GAAP;AAID","file":"sagasBuilder.js","sourcesContent":["import { takeEvery } from 'redux-saga';\nimport { call, put } from 'redux-saga/effects';\n\nconst defaultOptions = {\n  throwErrors: false,\n};\nexport function sagasBuilder(request, REQUEST, actions, options = {}) {\n  const {\n    throwErrors,\n  } = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  function* makeRequest({ payload, meta }) {\n    let data;\n    let error;\n\n    try {\n      yield put(actions.pending(payload, meta));\n      data = yield call(request, payload, meta);\n      yield put(actions.success(data, meta));\n    } catch (err) {\n      error = err;\n      yield put(actions.failure(error, meta));\n      if (throwErrors) {\n        throw error;\n      }\n    }\n\n    return {\n      data,\n      error,\n    };\n  }\n\n  function* watchForRequest() {\n    yield takeEvery(REQUEST, makeRequest);\n  }\n\n  return {\n    makeRequest,\n    watchForRequest,\n  };\n}\n"]}