{"version":3,"sources":["../src/requestWrapper.js"],"names":[],"mappings":";;;;;;;;kBASwB,c;;AATxB;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAM,iBAAiB;AACrB,aAAW,KADU;AAErB,kBAAgB;AAFK,CAAvB;;AAKe,SAAS,cAAT,CAAwB,OAAxB,EAAiC,eAAjC,EAAgE;AAAA;;AAAA,MAAd,OAAc,yDAAJ,EAAI;;AAAA,2CAKxE,cALwE,EAMxE,OANwE;;AAAA,MAE3E,SAF2E,yBAE3E,SAF2E;AAAA,MAG3E,cAH2E,yBAG3E,cAH2E;;;AAS7E,MAAI,SAAJ,EAAe;AACb,sBAAkB,gBAAgB,WAAhB,CAA4B,SAA5B,CAAlB;AACD;AACD,MAAM,iBAAiB,YAAY,UAAU,WAAV,EAAZ,GAAsC,KAA7D;AACA,MAAM,iBAAiB,YAAa,UAAU,CAAV,EAAa,WAAb,KAA6B,UAAU,KAAV,CAAgB,CAAhB,CAA1C,GAAgE,KAAvF;;AAGA;AACA,MAAI,YAAY,gCAAiB,eAAjB,CAAhB;;AAEA;AACA,MAAI,UAAU,8BAAe,SAAf,CAAd;;AAEA;AACA,MAAI,QAAQ,4BAAa,OAAb,EAAsB,UAAU,OAAhC,EAAyC,OAAzC,CAAZ;;AAEA,4DACG,YAAe,cAAf,gBAA0C,SAD7C,EACyD,UAAU,OADnE,+BAEG,YAAe,cAAf,gBAA0C,SAF7C,EAEyD,UAAU,OAFnE,+BAGG,YAAe,cAAf,gBAA0C,SAH7C,EAGyD,UAAU,OAHnE,+BAIG,YAAe,cAAf,gBAA0C,SAJ7C,EAIyD,UAAU,OAJnE;AAMA,sDACG,YAAe,SAAf,eAAoC,SADvC,EACmD,QAAQ,OAD3D,6BAEG,YAAe,SAAf,eAAoC,SAFvC,EAEmD,QAAQ,OAF3D,6BAGG,YAAe,SAAf,eAAoC,SAHvC,EAGmD,QAAQ,OAH3D,6BAIG,YAAe,SAAf,eAAoC,SAJvC,EAImD,QAAQ,OAJ3D;AAMA,gDACG,wBAAsB,cAAtB,GAAyC,aAD5C,EAC4D,MAAM,WADlE,2BAEG,yBAAuB,cAAvB,eAAiD,iBAFpD,EAEwE,MAAM,eAF9E;;AAKA,MAAI,cAAJ,EAAoB;AAClB,wBACK,SADL,EAEK,OAFL,EAGK,KAHL;AAKD;;AAED,SAAO;AACL,wBADK;AAEL,oBAFK;AAGL;AAHK,GAAP;AAKD","file":"requestWrapper.js","sourcesContent":["import constantsBuilder from './constantsBuilder.js';\nimport actionsBuilder from './actionsBuilder.js';\nimport sagasBuilder from './sagasBuilder.js';\n\nconst defaultOptions = {\n  namespace: false,\n  flattenExports: false,\n};\n\nexport default function requestWrapper(request, constantCreator, options = {}) {\n  const {\n    namespace,\n    flattenExports,\n  } = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  if (namespace) {\n    constantCreator = constantCreator.createChild(namespace);\n  }\n  const namespaceUpper = namespace ? namespace.toUpperCase() : false;\n  const namespaceTitle = namespace ? (namespace[0].toUpperCase() + namespace.slice(1)) : false;\n\n\n  // Constants\n  let constants = constantsBuilder(constantCreator);\n\n  // Actions\n  let actions = actionsBuilder(constants);\n\n  // Sagas\n  let sagas = sagasBuilder(request, constants.REQUEST, actions);\n\n  constants = {\n    [namespace ? `${namespaceUpper}_REQUEST` : 'REQUEST']: constants.REQUEST,\n    [namespace ? `${namespaceUpper}_PENDING` : 'PENDING']: constants.PENDING,\n    [namespace ? `${namespaceUpper}_SUCCESS` : 'SUCCESS']: constants.SUCCESS,\n    [namespace ? `${namespaceUpper}_FAILURE` : 'FAILURE']: constants.FAILURE,\n  };\n  actions = {\n    [namespace ? `${namespace}Request` : 'request']: actions.request,\n    [namespace ? `${namespace}Pending` : 'pending']: actions.pending,\n    [namespace ? `${namespace}Success` : 'success']: actions.success,\n    [namespace ? `${namespace}Failure` : 'failure']: actions.failure,\n  };\n  sagas = {\n    [namespace ? `request${namespaceTitle}` : 'makeRequest']: sagas.makeRequest,\n    [namespace ? `watchFor${namespaceTitle}Request` : 'watchForRequest']: sagas.watchForRequest,\n  };\n\n  if (flattenExports) {\n    return {\n      ...constants,\n      ...actions,\n      ...sagas,\n    };\n  }\n\n  return {\n    constants,\n    actions,\n    sagas,\n  };\n}\n"]}