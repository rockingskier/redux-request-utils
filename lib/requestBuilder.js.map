{"version":3,"sources":["../src/requestBuilder.js"],"names":[],"mappings":";;;;;;;;QAMgB,c,GAAA,c;;AANhB;;;;;;AAGA,IAAM,oBAAoB,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,CAA1B;;AAGO,SAAS,cAAT,CAAwB,GAAxB,EAA4H;AAAA,MAA/F,WAA+F,yDAAjF,EAAiF;;AAAA,mEAAJ,EAAI;;AAAA,iCAA3E,cAA2E;AAAA,MAA3E,cAA2E,uCAA1D,KAA0D;AAAA,gCAAnD,aAAmD;AAAA,MAAnD,aAAmD,sCAAnC,KAAmC;AAAA,8BAA5B,WAA4B;AAAA,MAA5B,WAA4B,oCAAd,KAAc;;AACjI,SAAO,UAAC,OAAD,EAAwB;AAAA,QAAd,IAAc,yDAAP,EAAO;;AAC7B;AACA,QAAM,UAAU,OAAO,GAAP,KAAe,UAAf,GAA4B,IAAI,OAAJ,EAAa,IAAb,CAA5B,GAAiD,GAAjE;;AAEA;AACA,QAAM,wBACD,WADC,CAAN;;AAIA;AACA,QAAI,UAAU,EAAd;AACA,QAAI,KAAK,SAAT,EAAoB;AAClB,cAAQ,eAAR,gBAAqC,KAAK,SAA1C;AACD;AACD,QAAI,OAAO,SAAS,OAAhB,KAA4B,UAAhC,EAA4C;AAC1C,gBAAU,SAAS,OAAT,CAAiB,OAAjB,EAA0B,OAA1B,EAAmC,IAAnC,CAAV;AACD;AACD,QAAI,QAAQ,aAAZ,EAA2B;AACzB,cAAQ,kCAAR,IAA8C,IAA9C;AACA,eAAS,WAAT,GAAuB,SAAvB;AACD;;AAED;AACA,QAAI,OAAO,kBAAkB,QAAlB,CAA2B,YAAY,MAAvC,IAAiD,OAAjD,GAA2D,SAAtE;AACA,QAAI,OAAO,SAAS,IAAhB,KAAyB,UAA7B,EAAyC;AACvC,aAAO,SAAS,IAAT,CAAc,IAAd,EAAoB,IAApB,CAAP;AACD;AACD,QAAI,OAAO,IAAP,KAAgB,WAAhB,IAA+B,OAAO,IAAP,KAAgB,QAAnD,EAA6D;AAC3D,aAAO,KAAK,SAAL,CAAe,IAAf,CAAP;AACA,cAAQ,QAAR,IAAoB,kBAApB;AACA,cAAQ,cAAR,IAA0B,kBAA1B;AACD;;AAED,aAAS,OAAT,GAAmB,OAAnB;AACA,aAAS,IAAT,GAAgB,IAAhB;;AAEA,WAAO,MAAM,OAAN,EAAe,QAAf,EACJ,IADI,CACC,UAAC,QAAD,EAAc;AAClB,cAAQ,SAAS,MAAjB;AACE,aAAK,GAAL;AACA,aAAK,GAAL;AACE,iBAAO,QAAP,CAHJ,CAGsB;AACpB;AACE,gBAAM,gCAAc,SAAS,MAAvB,EAA+B,EAAE,kBAAF,EAA/B,CAAN;AALJ;AAOD,KATI,EAUJ,IAVI,CAUC,UAAC,QAAD;AAAA,aAAc,iBAAiB,eAAe,QAAf,EAAyB,OAAzB,EAAkC,IAAlC,CAAjB,GAA2D,SAAS,IAAT,EAAzE;AAAA,KAVD,EAWJ,IAXI,CAWC,UAAC,IAAD;AAAA,aAAU,gBAAgB,cAAc,IAAd,EAAoB,OAApB,EAA6B,IAA7B,CAAhB,GAAqD,IAA/D;AAAA,KAXD,EAYJ,KAZI,CAYE,cAAc,UAAC,GAAD;AAAA,aAAS,YAAY,GAAZ,EAAiB,OAAjB,EAA0B,IAA1B,CAAT;AAAA,KAAd,GAAyD,UAAC,GAAD,EAAS;AAAE,YAAM,GAAN;AAAY,KAZlF,CAAP;AAaD,GAjDD;AAkDD","file":"requestBuilder.js","sourcesContent":["import HttpError from 'standard-http-error';\n\n\nconst methodsWithBodies = ['POST', 'PUT', 'PATCH'];\n\n\nexport function requestBuilder(url, requestOpts = {}, { handleResponse = false, handleSuccess = false, handleError = false } = {}) {\n  return (payload, meta = {}) => {\n    // Build the URL\n    const callUrl = typeof url === 'function' ? url(payload, meta) : url;\n\n    // Options to pass to the `fetch` request\n    const callOpts = {\n      ...requestOpts,\n    };\n\n    // Headers\n    let headers = {};\n    if (meta.authToken) {\n      headers['Authorization'] = `Bearer ${meta.authToken}`;\n    }\n    if (typeof callOpts.headers === 'function') {\n      headers = callOpts.headers(headers, payload, meta);\n    }\n    if (headers.Authorization) {\n      headers['Access-Control-Allow-Credentials'] = true;\n      callOpts.credentials = 'include';\n    }\n\n    // Body\n    let body = methodsWithBodies.includes(requestOpts.method) ? payload : undefined;\n    if (typeof callOpts.body === 'function') {\n      body = callOpts.body(body, meta);\n    }\n    if (typeof body !== 'undefined' && typeof body !== 'string') {\n      body = JSON.stringify(body);\n      headers['Accept'] = 'application/json';\n      headers['Content-Type'] = 'application/json';\n    }\n\n    callOpts.headers = headers;\n    callOpts.body = body;\n\n    return fetch(callUrl, callOpts)\n      .then((response) => {\n        switch (response.status) {\n          case 200:\n          case 201:\n            return response;  // Keep going!\n          default:\n            throw new HttpError(response.status, { response });\n        }\n      })\n      .then((response) => handleResponse ? handleResponse(response, payload, meta) : response.json())\n      .then((data) => handleSuccess ? handleSuccess(data, payload, meta) : data)\n      .catch(handleError ? (err) => handleError(err, payload, meta) : (err) => { throw err; });\n  };\n}\n"]}